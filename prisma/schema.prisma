generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String        @id @default(cuid())
    email           String?       @unique
    accounts        Account[]
    sessions        Session[]
    
    // GitHub specific fields
    githubId        Int?         @unique
    githubLogin     String?      @unique
    avatarUrl       String?
    htmlUrl         String?
    bio            String?       @db.Text
    location       String?
    company        String?
    blog           String?
    twitterUsername String?
    publicRepos    Int?
    followers      Int?
    following      Int?
    
    // Timestamps
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
    
    // Relation to GitHub events
    githubEvents   GitHubEvent[]

    @@index([email, githubLogin])
}

model GitHubEvent {
    id          String   @id
    type        String
    repoId      Int
    repoName    String
    repoUrl     String
    isPublic    Boolean
    createdAt   DateTime
    
    // Optional payload data
    action      String?
    commitCount Int?     // For PushEvents
    branchRef   String?  // For PushEvents
    
    // Relations
    user        User     @relation(fields: [userId], references: [id])
    userId      String

    @@index([userId, createdAt])
}